nodes = {
	
	dpsim = {
		type = "shmem",
		in = {
			name = "/dpsim-villas",	# Name of shared memory segment for sending side
			hooks = (
				{ type = "stats" }
			),
			signals = {
				count = 1,
				type = "float"
			}
		},
		out = {
			name = "/villas-dpsim"	# Name of shared memory segment for receiving side
			signals = {
					count = 1,
					type = "float"
				}
		},				
		queuelen = 1024,	# Length of the queues
		polling = true,		# We can busy-wait or use pthread condition variables for synchronizations
	},

	nano = {
		type = "nanomsg",
		format = "villas.human",

		out = {
			endpoints = [
				"ipc:///tmp/test.ipc"
			]
			# signals = {
			# 	count = 1,
			# 	type = "float"
			# }
		}
		
		in = {
			endpoints = [
				"ipc:///tmp/test2.ipc"
			]
			# signals = {
			# 	count = 1,
			# 	type = "float"
			# }
		}
	}
}

paths = (
	{
		in = "dpsim",
		out = "nano",
		mode = "any"

	}
	
	# {	in = "nano",
	# 	out = "dpsim",
	# },
)
